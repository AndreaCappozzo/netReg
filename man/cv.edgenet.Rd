% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/edgenet_modelselection.R
\name{cv.edgenet}
\alias{cv.edgenet}
\title{Find the optimal shrinkage parameters for edgenet}
\usage{
cv.edgenet(X, Y, G.X = NULL, G.Y = NULL, thresh = 1e-05, maxit = 1e+05,
  family = c("gaussian"), nfolds = 10, foldid = NULL, ...)
}
\arguments{
\item{X}{input matrix, of dimension (\code{n} x \code{p}) 
where \code{n} is the number of observations and \code{p} is the number 
of covariables. Each row is an observation vector.}

\item{Y}{output matrix, of dimension (\code{n} x \code{q}) 
where \code{n} is the number of observations and \code{q} is the number 
of response variables Each row is an observation vector.}

\item{G.X}{non-negativ affinity matrix for \code{n}, of dimensions 
(\code{p} x \code{p}) where \code{p} is the number of covariables \code{X}}

\item{G.Y}{non-negativ affinity matrix for \code{n}, of dimensions 
(\code{q} x \code{q}) where \code{q} is the number of covariables \code{Y}}

\item{thresh}{threshold for coordinate descent}

\item{maxit}{maximum number of iterations}

\item{family}{family of response, e.g. gaussian}

\item{nfolds}{the number of folds to be used - default is 10 (minimum 3, maximum nrow(X)).}

\item{foldid}{an optional vector of length \code{nrow(X)} of values between 1 and \code{nfold} identifying what fold each observation is in.}

\item{...}{additional parameters}
}
\value{
An object of class \code{cv.edgenet}
\item{call }{ the call that produced the object}
\item{lambda }{ the estimated (\code{p} x \code{q})-dimensional coefficient matrix B.hat}
\item{psigx }{ the estimated (\code{q} x \code{1})-dimensional vector of intercepts}
\item{psigy }{ the estimated (\code{q} x \code{1})-dimensional vector of intercepts}
\item{foldid }{ the vector of fold assignments yoused}
}
\description{
Finds the optimal shrinkage parameters using cross-validation for edgenet. 
We use the BOBYQA algorithm to minimize the sum of squared residuals objective function.
}
\examples{
\dontrun{
X <- matrix(rnorm(100*10),100,10)
Y <- matrix(rnorm(100),100,1)
G.X <- matrix(rpois(10*10,1),10)
G.X <- t(G.X) + G.X
diag(G.X) <- 0
cv.edge <- cv.edgenet(X=X, Y=Y, G.X=G.X, family="gaussian")

cv.edge.l <- cv.edgenet(X=X, Y=Y, G.X=G.X, lambda=1, family="gaussian")

cv.edge.ps <- cv.edgenet(X=X, Y=Y, G.X=G.X, psigx=1, psigy=1, family="gaussian")
}
}
\author{
Simon Dirmeier, \email{netreg@simon-dirmeier.net}
}
\references{
Friedman J., Hastie T., Hoefling H. and Tibshirani R. (2007), 
 Pathwise coordinate optimization.\cr
 \emph{The Annals of Applied Statistics}\cr \cr
 Friedman J., Hastie T. and Tibshirani R. (2010),
 Regularization Paths for Generalized Linear Models via Coordinate Descent. \cr
 \emph{Journal of Statistical Software}\cr \cr
 Fu W. J. (1998),  Penalized Regression: The Bridge Versus the Lasso.\cr
 \emph{Journal of Computational and Graphical Statistics}\cr \cr
 Cheng W. and Wang W. (2014), Graph-regularized dual Lasso for robust eQTL mapping.\cr
 \emph{Bioinformatics}\cr \cr
 Powell M.J.D. (2009), 
 The BOBYQA algorithm for bound constrained optimization without derivatives.\cr
 \url{http://www.damtp.cam.ac.uk/user/na/NA_papers/NA2009_06.pdf}
}

