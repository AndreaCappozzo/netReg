This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by netReg configure 0.1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure 

## --------- ##
## Platform. ##
## --------- ##

hostname = bs-mbpr134.d.ethz.ch
uname -m = x86_64
uname -r = 15.6.0
uname -s = Darwin
uname -v = Darwin Kernel Version 15.6.0: Thu Jun 23 18:25:34 PDT 2016; root:xnu-3248.60.10~1/RELEASE_X86_64

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 15.6.0: Thu Jun 23 18:25:34 PDT 2016; root:xnu-3248.60.10~1/RELEASE_X86_64
Kernel configured for up to 4 processors.
2 processors are physically available.
4 processors are logically available.
Processor type: x86_64h (Intel x86-64h Haswell)
Processors active: 0 1 2 3
Primary memory available: 16.00 gigabytes
Default processor set: 259 tasks, 1203 threads, 4 processors
Load average: 1.97, Mach factor: 2.02
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /opt/local/scala/scala-2.12.0/bin
PATH: /Applications/Julia-0.5.app/Contents/Resources/julia/bin
PATH: /opt/local/lib/postgresql93/bin
PATH: /opt/local/cassandra/bin
PATH: /opt/local/lib/mysql5/bin
PATH: /Library/TeX/texbin/
PATH: /opt/local/bin
PATH: /opt/local/sbin
PATH: /usr/local/gradle//bin
PATH: /usr/local/maven/bin
PATH: /usr/local/digital_alexandria
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /sbin
PATH: /bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:1796: /Library/Frameworks/R.framework/Resources
configure:1798: building from R
configure:1814: checking whether configure should try to set CXXFLAGS
configure:1822: result: yes
configure:1883: checking for g++
configure:1899: found /opt/local/bin/g++
configure:1910: result: g++
configure:1937: checking for C++ compiler version
configure:1946: g++ --version >&5
g++ (MacPorts gcc5 5.4.0_0) 5.4.0
Copyright (C) 2015 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:1957: $? = 0
configure:1946: g++ -v >&5
Using built-in specs.
COLLECT_GCC=g++
COLLECT_LTO_WRAPPER=/opt/local/libexec/gcc/x86_64-apple-darwin15/5.4.0/lto-wrapper
Target: x86_64-apple-darwin15
Configured with: /opt/local/var/macports/build/_opt_mports_dports_lang_gcc5/gcc5/work/gcc-5.4.0/configure --prefix=/opt/local --build=x86_64-apple-darwin15 --enable-languages=c,c++,objc,obj-c++,lto,fortran,java --libdir=/opt/local/lib/gcc5 --includedir=/opt/local/include/gcc5 --infodir=/opt/local/share/info --mandir=/opt/local/share/man --datarootdir=/opt/local/share/gcc-5 --with-local-prefix=/opt/local --with-system-zlib --disable-nls --program-suffix=-mp-5 --with-gxx-include-dir=/opt/local/include/gcc5/c++/ --with-gmp=/opt/local --with-mpfr=/opt/local --with-mpc=/opt/local --with-isl=/opt/local --enable-stage1-checking --disable-multilib --enable-lto --enable-libstdcxx-time --with-build-config=bootstrap-debug --with-as=/opt/local/bin/as --with-ld=/opt/local/bin/ld --with-ar=/opt/local/bin/ar --with-bugurl=https://trac.macports.org/newticket --with-pkgversion='MacPorts gcc5 5.4.0_0'
Thread model: posix
gcc version 5.4.0 (MacPorts gcc5 5.4.0_0) 
configure:1957: $? = 0
configure:1946: g++ -V >&5
g++: error: unrecognized command line option '-V'
g++: fatal error: no input files
compilation terminated.
configure:1957: $? = 1
configure:1946: g++ -qversion >&5
g++: error: unrecognized command line option '-qversion'
g++: fatal error: no input files
compilation terminated.
configure:1957: $? = 1
configure:1977: checking whether the C++ compiler works
configure:1999: g++    conftest.cpp  >&5
configure:2003: $? = 0
configure:2051: result: yes
configure:2054: checking for C++ compiler default output file name
configure:2056: result: a.out
configure:2062: checking for suffix of executables
configure:2069: g++ -o conftest    conftest.cpp  >&5
configure:2073: $? = 0
configure:2095: result: 
configure:2117: checking whether we are cross compiling
configure:2125: g++ -o conftest    conftest.cpp  >&5
configure:2129: $? = 0
configure:2136: ./conftest
configure:2140: $? = 0
configure:2155: result: no
configure:2160: checking for suffix of object files
configure:2182: g++ -c   conftest.cpp >&5
configure:2186: $? = 0
configure:2207: result: o
configure:2211: checking whether we are using the GNU C++ compiler
configure:2230: g++ -c   conftest.cpp >&5
configure:2230: $? = 0
configure:2239: result: yes
configure:2248: checking whether g++ accepts -g
configure:2268: g++ -c -g  conftest.cpp >&5
configure:2268: $? = 0
configure:2309: result: yes
configure:2332: checking for a sed that does not truncate output
configure:2396: result: /usr/bin/sed
configure:2444: checking for ranlib
configure:2460: found /opt/local/bin/ranlib
configure:2471: result: ranlib
configure:2503: checking whether C++ compiler accepts -O3
configure:2522: g++ -c -g -O2  -O3  conftest.cpp >&5
configure:2522: $? = 0
configure:2531: result: yes
configure:2547: : CXXFLAGS="$CXXFLAGS"
configure:2550: $? = 0
configure:2503: checking whether C++ compiler accepts -fPIC
configure:2522: g++ -c -g -O2 -O3  -fPIC  conftest.cpp >&5
configure:2522: $? = 0
configure:2531: result: yes
configure:2547: : CXXFLAGS="$CXXFLAGS"
configure:2550: $? = 0
configure:2503: checking whether C++ compiler accepts -pipe
configure:2522: g++ -c -g -O2 -O3 -fPIC  -pipe  conftest.cpp >&5
configure:2522: $? = 0
configure:2531: result: yes
configure:2547: : CXXFLAGS="$CXXFLAGS"
configure:2550: $? = 0
configure:2503: checking whether C++ compiler accepts -Wall
configure:2522: g++ -c -g -O2 -O3 -fPIC -pipe  -Wall  conftest.cpp >&5
configure:2522: $? = 0
configure:2531: result: yes
configure:2547: : CXXFLAGS="$CXXFLAGS"
configure:2550: $? = 0
configure:2503: checking whether C++ compiler accepts -ffast-math
configure:2522: g++ -c -g -O2 -O3 -fPIC -pipe -Wall  -ffast-math  conftest.cpp >&5
configure:2522: $? = 0
configure:2531: result: yes
configure:2547: : CXXFLAGS="$CXXFLAGS"
configure:2550: $? = 0
configure:2503: checking whether C++ compiler accepts -fomit-frame-pointer
configure:2522: g++ -c -g -O2 -O3 -fPIC -pipe -Wall -ffast-math  -fomit-frame-pointer  conftest.cpp >&5
configure:2522: $? = 0
configure:2531: result: yes
configure:2547: : CXXFLAGS="$CXXFLAGS"
configure:2550: $? = 0
configure:2503: checking whether C++ compiler accepts -flto
configure:2522: g++ -c -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer  -flto  conftest.cpp >&5
configure:2522: $? = 0
configure:2531: result: yes
configure:2547: : CXXFLAGS="$CXXFLAGS"
configure:2550: $? = 0
configure:2503: checking whether C++ compiler accepts -DARMA_DONT_USE_WRAPPER
configure:2522: g++ -c -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto  -DARMA_DONT_USE_WRAPPER  conftest.cpp >&5
configure:2522: $? = 0
configure:2531: result: yes
configure:2547: : CXXFLAGS="$CXXFLAGS"
configure:2550: $? = 0
configure:2584: checking whether g++ supports C++11 features by default
configure:2878: g++ -c -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto -DARMA_DONT_USE_WRAPPER  conftest.cpp >&5
conftest.cpp:20:2: error: #error "This is not a C++11 compiler"
 #error "This is not a C++11 compiler"
  ^
configure:2878: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "netReg"
| #define PACKAGE_TARNAME "netReg"
| #define PACKAGE_VERSION "0.1"
| #define PACKAGE_STRING "netReg 0.1"
| #define PACKAGE_BUGREPORT "simon.dirmeier@gmx.de"
| #define PACKAGE_URL "https://github.com/dirmeier/netReg"
| /* end confdefs.h.  */
| 
| 
| // If the compiler admits that it is not ready for C++11, why torture it?
| // Hopefully, this will speed up the test.
| 
| #ifndef __cplusplus
| 
| #error "This is not a C++ compiler"
| 
| #elif __cplusplus < 201103L
| 
| #error "This is not a C++11 compiler"
| 
| #else
| 
| namespace cxx11
| {
| 
|   namespace test_static_assert
|   {
| 
|     template <typename T>
|     struct check
|     {
|       static_assert(sizeof(int) <= sizeof(T), "not big enough");
|     };
| 
|   }
| 
|   namespace test_final_override
|   {
| 
|     struct Base
|     {
|       virtual void f() {}
|     };
| 
|     struct Derived : public Base
|     {
|       virtual void f() override {}
|     };
| 
|   }
| 
|   namespace test_double_right_angle_brackets
|   {
| 
|     template < typename T >
|     struct check {};
| 
|     typedef check<void> single_type;
|     typedef check<check<void>> double_type;
|     typedef check<check<check<void>>> triple_type;
|     typedef check<check<check<check<void>>>> quadruple_type;
| 
|   }
| 
|   namespace test_decltype
|   {
| 
|     int
|     f()
|     {
|       int a = 1;
|       decltype(a) b = 2;
|       return a + b;
|     }
| 
|   }
| 
|   namespace test_type_deduction
|   {
| 
|     template < typename T1, typename T2 >
|     struct is_same
|     {
|       static const bool value = false;
|     };
| 
|     template < typename T >
|     struct is_same<T, T>
|     {
|       static const bool value = true;
|     };
| 
|     template < typename T1, typename T2 >
|     auto
|     add(T1 a1, T2 a2) -> decltype(a1 + a2)
|     {
|       return a1 + a2;
|     }
| 
|     int
|     test(const int c, volatile int v)
|     {
|       static_assert(is_same<int, decltype(0)>::value == true, "");
|       static_assert(is_same<int, decltype(c)>::value == false, "");
|       static_assert(is_same<int, decltype(v)>::value == false, "");
|       auto ac = c;
|       auto av = v;
|       auto sumi = ac + av + 'x';
|       auto sumf = ac + av + 1.0;
|       static_assert(is_same<int, decltype(ac)>::value == true, "");
|       static_assert(is_same<int, decltype(av)>::value == true, "");
|       static_assert(is_same<int, decltype(sumi)>::value == true, "");
|       static_assert(is_same<int, decltype(sumf)>::value == false, "");
|       static_assert(is_same<int, decltype(add(c, v))>::value == true, "");
|       return (sumf > 0.0) ? sumi : add(c, v);
|     }
| 
|   }
| 
|   namespace test_noexcept
|   {
| 
|     int f() { return 0; }
|     int g() noexcept { return 0; }
| 
|     static_assert(noexcept(f()) == false, "");
|     static_assert(noexcept(g()) == true, "");
| 
|   }
| 
|   namespace test_constexpr
|   {
| 
|     template < typename CharT >
|     unsigned long constexpr
|     strlen_c_r(const CharT *const s, const unsigned long acc) noexcept
|     {
|       return *s ? strlen_c_r(s + 1, acc + 1) : acc;
|     }
| 
|     template < typename CharT >
|     unsigned long constexpr
|     strlen_c(const CharT *const s) noexcept
|     {
|       return strlen_c_r(s, 0UL);
|     }
| 
|     static_assert(strlen_c("") == 0UL, "");
|     static_assert(strlen_c("1") == 1UL, "");
|     static_assert(strlen_c("example") == 7UL, "");
|     static_assert(strlen_c("another\0example") == 7UL, "");
| 
|   }
| 
|   namespace test_rvalue_references
|   {
| 
|     template < int N >
|     struct answer
|     {
|       static constexpr int value = N;
|     };
| 
|     answer<1> f(int&)       { return answer<1>(); }
|     answer<2> f(const int&) { return answer<2>(); }
|     answer<3> f(int&&)      { return answer<3>(); }
| 
|     void
|     test()
|     {
|       int i = 0;
|       const int c = 0;
|       static_assert(decltype(f(i))::value == 1, "");
|       static_assert(decltype(f(c))::value == 2, "");
|       static_assert(decltype(f(0))::value == 3, "");
|     }
| 
|   }
| 
|   namespace test_uniform_initialization
|   {
| 
|     struct test
|     {
|       static const int zero {};
|       static const int one {1};
|     };
| 
|     static_assert(test::zero == 0, "");
|     static_assert(test::one == 1, "");
| 
|   }
| 
|   namespace test_lambdas
|   {
| 
|     void
|     test1()
|     {
|       auto lambda1 = [](){};
|       auto lambda2 = lambda1;
|       lambda1();
|       lambda2();
|     }
| 
|     int
|     test2()
|     {
|       auto a = [](int i, int j){ return i + j; }(1, 2);
|       auto b = []() -> int { return '0'; }();
|       auto c = [=](){ return a + b; }();
|       auto d = [&](){ return c; }();
|       auto e = [a, &b](int x) mutable {
|         const auto identity = [](int y){ return y; };
|         for (auto i = 0; i < a; ++i)
|           a += b--;
|         return x + identity(a + b);
|       }(0);
|       return a + b + c + d + e;
|     }
| 
|     int
|     test3()
|     {
|       const auto nullary = [](){ return 0; };
|       const auto unary = [](int x){ return x; };
|       using nullary_t = decltype(nullary);
|       using unary_t = decltype(unary);
|       const auto higher1st = [](nullary_t f){ return f(); };
|       const auto higher2nd = [unary](nullary_t f1){
|         return [unary, f1](unary_t f2){ return f2(unary(f1())); };
|       };
|       return higher1st(nullary) + higher2nd(nullary)(unary);
|     }
| 
|   }
| 
|   namespace test_variadic_templates
|   {
| 
|     template <int...>
|     struct sum;
| 
|     template <int N0, int... N1toN>
|     struct sum<N0, N1toN...>
|     {
|       static constexpr auto value = N0 + sum<N1toN...>::value;
|     };
| 
|     template <>
|     struct sum<>
|     {
|       static constexpr auto value = 0;
|     };
| 
|     static_assert(sum<>::value == 0, "");
|     static_assert(sum<1>::value == 1, "");
|     static_assert(sum<23>::value == 23, "");
|     static_assert(sum<1, 2>::value == 3, "");
|     static_assert(sum<5, 5, 11>::value == 21, "");
|     static_assert(sum<2, 3, 5, 7, 11, 13>::value == 41, "");
| 
|   }
| 
|   // http://stackoverflow.com/questions/13728184/template-aliases-and-sfinae
|   // Clang 3.1 fails with headers of libstd++ 4.8.3 when using std::function
|   // because of this.
|   namespace test_template_alias_sfinae
|   {
| 
|     struct foo {};
| 
|     template<typename T>
|     using member = typename T::member_type;
| 
|     template<typename T>
|     void func(...) {}
| 
|     template<typename T>
|     void func(member<T>*) {}
| 
|     void test();
| 
|     void test() { func<foo>(0); }
| 
|   }
| 
| }  // namespace cxx11
| 
| #endif  // __cplusplus >= 201103L
| 
| 
| 
configure:2885: result: no
configure:2896: checking whether g++ supports C++11 features with -std=c++11
configure:3192: g++ -std=c++11 -c -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto -DARMA_DONT_USE_WRAPPER  conftest.cpp >&5
configure:3192: $? = 0
configure:3201: result: yes
configure:3241: checking for g++ -std=c++11 option to support OpenMP
configure:3256: g++ -std=c++11 -o conftest -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto -DARMA_DONT_USE_WRAPPER   conftest.cpp  >&5
conftest.cpp:12:2: error: 'choke' does not name a type
  choke me
  ^
In file included from conftest.cpp:14:0:
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:39:3: error: 'omp_lock_t' does not name a type
 } omp_lock_t;
   ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:86:28: error: variable or field 'omp_init_lock' declared void
 extern void omp_init_lock (omp_lock_t *) __GOMP_NOTHROW;
                            ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:86:28: error: 'omp_lock_t' was not declared in this scope
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:86:40: error: expected primary-expression before ')' token
 extern void omp_init_lock (omp_lock_t *) __GOMP_NOTHROW;
                                        ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:87:31: error: variable or field 'omp_destroy_lock' declared void
 extern void omp_destroy_lock (omp_lock_t *) __GOMP_NOTHROW;
                               ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:87:31: error: 'omp_lock_t' was not declared in this scope
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:87:43: error: expected primary-expression before ')' token
 extern void omp_destroy_lock (omp_lock_t *) __GOMP_NOTHROW;
                                           ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:88:27: error: variable or field 'omp_set_lock' declared void
 extern void omp_set_lock (omp_lock_t *) __GOMP_NOTHROW;
                           ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:88:27: error: 'omp_lock_t' was not declared in this scope
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:88:39: error: expected primary-expression before ')' token
 extern void omp_set_lock (omp_lock_t *) __GOMP_NOTHROW;
                                       ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:89:29: error: variable or field 'omp_unset_lock' declared void
 extern void omp_unset_lock (omp_lock_t *) __GOMP_NOTHROW;
                             ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:89:29: error: 'omp_lock_t' was not declared in this scope
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:89:41: error: expected primary-expression before ')' token
 extern void omp_unset_lock (omp_lock_t *) __GOMP_NOTHROW;
                                         ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:90:27: error: 'omp_lock_t' was not declared in this scope
 extern int omp_test_lock (omp_lock_t *) __GOMP_NOTHROW;
                           ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:90:39: error: expected primary-expression before ')' token
 extern int omp_test_lock (omp_lock_t *) __GOMP_NOTHROW;
                                       ^
/opt/local/lib/gcc5/gcc/x86_64-apple-darwin15/5.4.0/include/omp.h:90:41: error: expected ',' or ';' before 'throw'
 extern int omp_test_lock (omp_lock_t *) __GOMP_NOTHROW;
                                         ^
configure:3256: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "netReg"
| #define PACKAGE_TARNAME "netReg"
| #define PACKAGE_VERSION "0.1"
| #define PACKAGE_STRING "netReg 0.1"
| #define PACKAGE_BUGREPORT "simon.dirmeier@gmx.de"
| #define PACKAGE_URL "https://github.com/dirmeier/netReg"
| #define HAVE_CXX11 1
| /* end confdefs.h.  */
| 
| #ifndef _OPENMP
|  choke me
| #endif
| #include <omp.h>
| int main () { return omp_get_num_threads (); }
| 
configure:3274: g++ -std=c++11 -o conftest -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto -DARMA_DONT_USE_WRAPPER -fopenmp   conftest.cpp  >&5
configure:3274: $? = 0
configure:3288: result: -fopenmp
configure:3300: checking for library containing cblas_dgemm
configure:3331: g++ -std=c++11 -o conftest -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto -DARMA_DONT_USE_WRAPPER   conftest.cpp  >&5
Undefined symbols for architecture x86_64:
  "_cblas_dgemm", referenced from:
      _main in cc2b3ki9.o
ld: symbol(s) not found for architecture x86_64
collect2: error: ld returned 1 exit status
configure:3331: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "netReg"
| #define PACKAGE_TARNAME "netReg"
| #define PACKAGE_VERSION "0.1"
| #define PACKAGE_STRING "netReg 0.1"
| #define PACKAGE_BUGREPORT "simon.dirmeier@gmx.de"
| #define PACKAGE_URL "https://github.com/dirmeier/netReg"
| #define HAVE_CXX11 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char cblas_dgemm ();
| int
| main ()
| {
| return cblas_dgemm ();
|   ;
|   return 0;
| }
configure:3331: g++ -std=c++11 -o conftest -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto -DARMA_DONT_USE_WRAPPER   conftest.cpp -lopenblas   >&5
ld: library not found for -lopenblas
collect2: error: ld returned 1 exit status
configure:3331: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "netReg"
| #define PACKAGE_TARNAME "netReg"
| #define PACKAGE_VERSION "0.1"
| #define PACKAGE_STRING "netReg 0.1"
| #define PACKAGE_BUGREPORT "simon.dirmeier@gmx.de"
| #define PACKAGE_URL "https://github.com/dirmeier/netReg"
| #define HAVE_CXX11 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char cblas_dgemm ();
| int
| main ()
| {
| return cblas_dgemm ();
|   ;
|   return 0;
| }
configure:3348: result: no
configure:3360: checking for library containing dgemm
configure:3391: g++ -std=c++11 -o conftest -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto -DARMA_DONT_USE_WRAPPER   conftest.cpp  >&5
Undefined symbols for architecture x86_64:
  "_dgemm", referenced from:
      _main in cciJSo04.o
ld: symbol(s) not found for architecture x86_64
collect2: error: ld returned 1 exit status
configure:3391: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "netReg"
| #define PACKAGE_TARNAME "netReg"
| #define PACKAGE_VERSION "0.1"
| #define PACKAGE_STRING "netReg 0.1"
| #define PACKAGE_BUGREPORT "simon.dirmeier@gmx.de"
| #define PACKAGE_URL "https://github.com/dirmeier/netReg"
| #define HAVE_CXX11 1
| /* end confdefs.h.  */
| 
| /* Override any GCC internal prototype to avoid an error.
|    Use char because int might match the return type of a GCC
|    builtin and then its argument prototype would still apply.  */
| #ifdef __cplusplus
| extern "C"
| #endif
| char dgemm ();
| int
| main ()
| {
| return dgemm ();
|   ;
|   return 0;
| }
configure:3391: g++ -std=c++11 -o conftest -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto -DARMA_DONT_USE_WRAPPER   conftest.cpp -lblas   >&5
configure:3391: $? = 0
configure:3408: result: -lblas
configure:3414: using blas
configure:3552: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by netReg config.status 0.1, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on bs-mbpr134.d.ethz.ch

config.status:792: creating src/Makevars
config.status:792: creating src/config.h
config.status:962: src/config.h is unchanged
configure:4717: result:
	Have fun with: netReg

	CXX:        g++ -std=c++11
	CXXFLAGS:   -g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto -DARMA_DONT_USE_WRAPPER


## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_cxx_compiler_gnu=yes
ac_cv_env_CCC_set=
ac_cv_env_CCC_value=
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_CXXFLAGS_set=
ac_cv_env_CXXFLAGS_value=
ac_cv_env_CXX_set=
ac_cv_env_CXX_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_objext=o
ac_cv_path_SED=/usr/bin/sed
ac_cv_prog_ac_ct_CXX=g++
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_cxx_g=yes
ac_cv_prog_cxx_openmp=-fopenmp
ac_cv_search_cblas_dgemm=no
ac_cv_search_dgemm=-lblas
ax_cv_check_cxxflags___DARMA_DONT_USE_WRAPPER=yes
ax_cv_check_cxxflags___O3=yes
ax_cv_check_cxxflags___Wall=yes
ax_cv_check_cxxflags___fPIC=yes
ax_cv_check_cxxflags___ffast_math=yes
ax_cv_check_cxxflags___flto=yes
ax_cv_check_cxxflags___fomit_frame_pointer=yes
ax_cv_check_cxxflags___pipe=yes
ax_cv_cxx_compile_cxx11=no
ax_cv_cxx_compile_cxx11__std_cpp11=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

CPPFLAGS=''
CXX='g++ -std=c++11'
CXXFLAGS='-g -O2 -O3 -fPIC -pipe -Wall -ffast-math -fomit-frame-pointer -flto -DARMA_DONT_USE_WRAPPER'
DEFS='-DHAVE_CONFIG_H'
ECHO_C='\c'
ECHO_N=''
ECHO_T=''
EXEEXT=''
HAVE_CXX11='1'
LDFLAGS=''
LIBOBJS=''
LIBS='-lblas '
LTLIBOBJS=''
OBJEXT='o'
OPENMP_CXXFLAGS='-fopenmp'
PACKAGE_BUGREPORT='simon.dirmeier@gmx.de'
PACKAGE_NAME='netReg'
PACKAGE_STRING='netReg 0.1'
PACKAGE_TARNAME='netReg'
PACKAGE_URL='https://github.com/dirmeier/netReg'
PACKAGE_VERSION='0.1'
PATH_SEPARATOR=':'
RANLIB='ranlib'
SED='/usr/bin/sed'
SHELL='/bin/sh'
ac_ct_CXX='g++'
bindir='${exec_prefix}/bin'
build_alias=''
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host_alias=''
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
netReg_CPPFLAGS=''
netReg_LDLIBS=' -lblas -llapack'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "netReg"
#define PACKAGE_TARNAME "netReg"
#define PACKAGE_VERSION "0.1"
#define PACKAGE_STRING "netReg 0.1"
#define PACKAGE_BUGREPORT "simon.dirmeier@gmx.de"
#define PACKAGE_URL "https://github.com/dirmeier/netReg"
#define HAVE_CXX11 1

configure: exit 0
